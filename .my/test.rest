
###
# Headerda Postman gibi User-Agent bilgisi olmadan sonuç dönmüyor,.
# Kayıt/Üye olunmadan login olunamaz.
# Login olunmadan da token alınıp bir middleware (/auth gibi) bir api çağrılamaz.
# Önce kayıt ol:
#
# NOT: Aynı kullanıcı defalarca kayıt olamasın diye kodsal değişiklik yapıldı, tabloda da yapılması gerekiyor.
# Login işlemi falan da çalışmıyor çoklu kayıtta, logindeki sorun oymuş sabahtan beri.
# ALTER TABLE users ADD UNIQUE (username);
# ALTER TABLE users ADD UNIQUE (email);
#
###

@hostname = http://localhost/leanphp
@path = api
@userAgent = LeanPHPRestClient
@username = vedat
@password =  vedyweb123
@userEmail = info@vedyweb.com
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjE4LCJuYW1lIjoidmVkYXQiLCJpYXQiOjE3MTQ2NTM5OTcsImV4cCI6MTcxNDY1NzU5N30.Bfm-fHmgI4ifIy1JS88AYhBt_LLs3TrmwjDiU3FRKvM

###

POST {{hostname}}/register HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}

{
  "username": "{{username}}",
  "password": "{{password}}",
  "email": "{{userEmail}}"
}

###
# Kayıt olduğun veya kayıtlı bir kullanıcıyla login ol:
# Ardından sana 1 saat süresi olan bir token gelecek.
# Kullanıcı bilgilerini içeren o tokenla middleware servislerine erişebilirsin.
###

### Login İsteği
POST {{hostname}}/login HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}

{
  "username": "{{username}}",
  "password": "{{password}}"
}

###

POST {{hostname}}/x HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}
Authorization: Bearer {{token}}

### Auth ile Kullanıcı Karşılama

###
# Heade alanında loginden aldığın 1 saat geçerli olan tokenla bu servisi çağırmazsan,
# nu hatayı verir: {"error":"Internal Server Error","message":"Invalid or expired token"}
# Her headera bearer token eklemen gerekecek middleware kullanılan metodlar için.
# Bu metod özel, tokenı parce edip user'ı buluyor mesela :)
###
POST {{hostname}}/auth/dashboard HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}
Authorization: Bearer {{token}}

###

GET {{hostname}}/secret HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}
Authorization: Bearer {{token}}

###
# Veritabanı oluşturulmuşsa bu metod başarılı bir şekilde userları ekliyor.
GET {{hostname}}/install HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}
Authorization: Bearer {{token}}

###

GET {{hostname}}/api/users HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}

###

GET {{hostname}}/api/user/3 HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}

###

POST {{hostname}}/api/users HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}
{
    "email": "john.doe@example.com",
    "username": "johndoe",
    "password": "3456777"

}


###
# Buraya maili yazıp post ettiğinde, sana dönen token'a tıklayarak şifreni sıfırlayabiliyorsun.
# Bu şekilde bir yanıt dönüyor: https://localhost/resetPassword/6431bd.....
POST {{hostname}}/newpassword HTTP/1.1
Content-Type: application/json
User-Agent: {{userAgent}}

{
  "email": "info@vedyweb.com"
}

###
# Öncelikle mail olarak şu linke geliniyor, ama bu backend linki tabii ki,
# Bu linki FE üzerinden alabilmesi için FE ye gelmesi gerek.
# FE yeni şifresini de alıp backende gmüönderecek.
# Örnek response 18 - vedyweb{"message":"Token is valid and Password updated successfully"}
# Bundan sonra tekrar login olduğunda yeni şifrenmi giriyorsun.

GET {{hostname}}/resetPassword/8a271202f12affe3f332343d2da7411fd194f1e3c3839674ef7cfed5d0a69485c651c9c573e249d31f37627a602c8b418b64
Content-Type: application/json
User-Agent: {{userAgent}}

{
  "newPassword": "vedyweb"
}